name: "01_Foundation"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
env:
  path: 01_Foundation
  az_rg: TF-Core-Rg
  az_sa: tfcorebackendsa
  az_cn: ghdeploytfstate

jobs:
  Plan_Dev:
    #if: github.ref == 'refs/heads/master' && github.event_name == 'pull_request'
    uses: Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_plan.yml@master
    with:
      path: ${{ env.path }}               ## Path to terraform root module (Required)
      tf_version: latest                  ## Terraform version. Default=latest (Optional)
      az_resource_group: ${{ env.az_rg }} ## AZ backend - AZURE Resource Group hosting terraform backend storage acc (Required)
      az_storage_acc: ${{ env.az_sa }}    ## AZ backend - AZURE terraform backend storage acc (Required)
      az_container_name: ${{ env.az_cn }} ## AZ backend - AZURE storage container hosting state files (Required)
      tf_key: foundation-dev              ## AZ backend - Specifies name that will be given to terraform state file (Required)
      tf_vars_file: config-dev.tfvars     ## Terraform TFVARS (Required)
    secrets:
      arm_client_id: ${{ secrets.ARM_CLIENT_ID }}             ## ARM Client ID 
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}     ## ARM Client Secret
      arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }} ## ARM Subscription ID
      arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}             ## ARM Tenant ID

  Deploy_Dev:
    needs: Plan_Dev
    uses: Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_apply.yml@master
    with:
      path: ${{ env.path }}               ## Path to terraform root module (Required)
      tf_version: latest                  ## Terraform version. Default=latest (Optional)
      az_resource_group: ${{ env.az_rg }} ## AZ backend - AZURE Resource Group hosting terraform backend storage acc (Required)
      az_storage_acc: ${{ env.az_sa }}    ## AZ backend - AZURE terraform backend storage acc (Required)
      az_container_name: ${{ env.az_cn }} ## AZ backend - AZURE storage container hosting state files (Required)
      tf_key: foundation-dev              ## AZ backend - Specifies name that will be given to terraform state file (Required)
      gh_environment: Development         ## GH Environment. Default=null - (Optional)
      tf_vars_file: config-dev.tfvars     ## Terraform TFVARS (Required)
    secrets:
      arm_client_id: ${{ secrets.ARM_CLIENT_ID }}             ## ARM Client ID 
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}     ## ARM Client Secret
      arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }} ## ARM Subscription ID
      arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}             ## ARM Tenant ID

  Plan_Uat:
    #if: github.ref == 'refs/heads/master' && github.event_name == 'pull_request'
    uses: Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_plan.yml@master
    with:
      path: ${{ env.path }}
      az_resource_group: ${{ env.az_rg }}
      az_storage_acc: ${{ env.az_sa }}
      az_container_name: ${{ env.az_cn }}
      tf_key: foundation-uat
      tf_vars_file: config-uat.tfvars
    secrets:
      arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}

  Deploy_Uat:
    needs: [Plan_Uat, Deploy_Dev]
    uses: Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_apply.yml@master
    with:
      path: ${{ env.path }}
      az_resource_group: ${{ env.az_rg }}
      az_storage_acc: ${{ env.az_sa }}
      az_container_name: ${{ env.az_cn }}
      tf_key: foundation-uat
      gh_environment: UserAcceptanceTesting
      tf_vars_file: config-uat.tfvars
    secrets:
      arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}

  Plan_Prod:
    #if: github.ref == 'refs/heads/master' && github.event_name == 'pull_request'
    uses: Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_plan.yml@master
    with:
      path: ${{ env.path }}
      az_resource_group: ${{ env.az_rg }}
      az_storage_acc: ${{ env.az_sa }}
      az_container_name: ${{ env.az_cn }}
      tf_key: foundation-prod
      tf_vars_file: config-prod.tfvars
    secrets:
      arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}

  Deploy_Prod:
    needs: [Plan_Prod, Deploy_Uat]
    uses: Pwd9000-ML/Azure-Terraform-Deployments/.github/workflows/az_tf_apply.yml@master
    with:
      path: ${{ env.path }}
      az_resource_group: ${{ env.az_rg }}
      az_storage_acc: ${{ env.az_sa }}
      az_container_name: ${{ env.az_cn }}
      tf_key: foundation-prod
      gh_environment: Production
      tf_vars_file: config-prod.tfvars
    secrets:
      arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}